#!/bin/sh

# New line for cleanliness
printf "\n"

# Checking if run as root, if not, throw an error and exit
if [ $(id -u) -ne 0 ]; then
  printf "Please run as root (sudo)\n\n"
  exit
fi

# Getting arguments and setting usage var
USAGE="usage: terramon-ng <start|stop> <interface> [channel or frequency]\nArguments MUST be provided in that order.\n"
FUNCTION="$1"
INTERFACE="$2"
CHANFREQ="$3"

#Checking if help requested
if [ "$FUNCTION" = "--help" ]; then
  printf "$USAGE"
fi

# Checking if empty, if so, print wireless card info
if [ -z "$FUNCTION" ]; then
  iwconfig
  printf "\n'terramon-ng --help' for usage."

# If function = start, run start functions
if [ "$FUNCTION" = "start" ]; then
  if [ -z "$INTERFACE" ]; then
    printf "$USAGE"
  else
    if [ -z "$CHANFREQ" ]; then
      ip link set $INTERFACE down > /dev/null 2>&1
      iw dev $INTERFACE set type monitor > /dev/null 2>&1
      ip link set $INTERFACE up > /dev/null 2>&1
      
      iw dev $INTERFACE info
    else
      printf "Channel/Frequency switching not yet implemented"
    fi
  fi
# If function = stop, run stop functions
elif [ "$FUNCTION" = "stop" ]; then
  if [ -z "$INTERFACE" ]; then
    printf "$USAGE"
  else
    if [ -z "$CHANFREQ" ]; then
      ip link set $INTERFACE down > /dev/null 2>&1
      iw dev $INTERFACE set type managed > /dev/null 2>&1
      ip link set $INTERFACE up > /dev/null 2>&1
      
      iw dev $INTERFACE info
    else
      printf "Channel/Frequency switching not yet implemented"
    fi
  fi
# If no valid argument(s), alert user and tell how to get help
elif [ -n "$FUNCTION" ] && [ "$FUNCTION" != "--help" ]; then
  printf "Invalid argument(s)!\n"
  printf "'terramon-ng --help' for usage"
fi

# New line to make output cleaner
printf "\n"
